<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 이 XML의 구조대로 구현될 클래스의 이름 => Impl클래스를 대체한다. -->
<mapper namespace="MovieHasGenreMapper">

	<!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
	<resultMap id="movie_has_genre" type="project.gatcha.model.MovieHasGenre">
		<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
		<result property="id" column="id" />
		<result property="movieKfaId" column="movie_kfa_id" />
		<result property="genreId" column="genre_id" />
		<result property="genreList" column="genre_list" />
		<result property="regDate" column="reg_date" />
		<result property="editDate" column="edit_date" />
	</resultMap>
	
			
    <!-- 영화 장르 정보를 저장한다 -->
	<insert id="insertMovieHasGenre" parameterType="project.gatcha.model.MovieHasGenre" 
		useGeneratedKeys="true" keyProperty="id">
		INSERT INTO movie_has_genre (
			movie_kfa_id, genre_id, reg_date, edit_date 
		) VALUES (
			#{movieKfaId}, #{genreId},  now(), now() 
		)
	</insert>
	
	<!-- 일련번호에 의한 영화 장르 정보 조회 -->
    <select id="selectMovieHasGenre" parameterType="project.gatcha.model.MovieHasGenre" 
    	resultMap="movie_has_genre">
        SELECT 
        	id, movie_kfa_id, genre_id, reg_date, edit_date  
        FROM movie_has_genre 
        WHERE id=#{id}
    </select>

    
    <!-- 영화 장르 정보 전체 조회 -->
    <select id="selectMovieHasGenreList" parameterType="project.gatcha.model.MovieHasGenre" 
    	resultMap="movie_has_genre">
        SELECT 
        	id, movie_kfa_id, genre_id, reg_date, edit_date  
        FROM movie_has_genre
    </select>
    
	<!-- 영화 코드를 파라미터로 넣어서 해당하는 장르명을 복수로 받아오기 ! -->
	<!-- 반복문 처리(3회)로 각각의 값을 더하여 하나의 값인것처럼 만드는 처리가 필요 -->
   	<select id="selectMovieHasGenreListById" parameterType="project.gatcha.model.MovieHasGenre" resultMap="movie_has_genre">
	   	SELECT gen.genre_name as genre_list, genre_id
		FROM movie_has_genre mhg
		INNER JOIN genre gen ON mhg.genre_id = gen.id
		WHERE mhg.movie_kfa_id = #{movieKfaId}
	</select>
    

	<!-- 영화 장르 정보를 변경한다 -->
	<update id="updateMovieHasGenre" parameterType="project.gatcha.model.MovieHasGenre">
		UPDATE movie_has_genre SET 
			movie_kfa_id=#{movieKfaId}, genre_id=#{genreId}, edit_date=now() 
		WHERE id=#{id}
	</update>
	
	<!-- 영화 장르 정보를 삭제한다-->
	<delete id="deleteMovieHasGenre" parameterType="project.gatcha.model.MovieHasGenre">
		DELETE FROM movie_has_genre WHERE id=#{id};
	</delete>

</mapper>





